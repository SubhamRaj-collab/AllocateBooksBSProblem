class Solution 
{
    //Function to find minimum number of pages.
    public static int findPages(int[]A,int N,int M)
    {
        if(M > N)return -1;
        
        int max = 0;
        int total = 0;
        
        for(int i = 0; i < N; i++)
        {
            total += A[i];
            max = Math.max(max, A[i]);
        }
        
        int start = max;
        int end = total;
        
        int res = Integer.MAX_VALUE;
        
        while(start <= end)
        {
            int mid = start+(end-start)/2;
            
            if(isPossible(A, N, M, mid))
            {
                res = Math.min(res, mid);
                end = mid-1;
            }
            else
            {
                start = mid+1;
            }
        }
        
        return res==Integer.MAX_VALUE?-1:res;
        
    }
    
    public static boolean isPossible(int A[], int n, int M, int num)
    {
        int allots = 0;
        int total = 0;
        
        for(int i = 0; i < n; i++)
        {
            total += A[i];
            if(total > num)
            {
                total = A[i];
                allots++;
            }
        }
        allots++;
        
        return (allots <= M) ? true : false;
    }
    
};